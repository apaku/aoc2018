#ip 2
reg = [1, 0, 0, 0, 0, 0]
addi 2 16 2 reg[2] = reg[2] + 16
seti 1 1 1  reg[1] = 1
seti 1 4 3  reg[3] = 1
mulr 1 3 5  reg[5] = reg[1] * reg[3]
eqrr 5 4 5  reg[5] = reg[5] == reg[4] ? 1 : 0
addr 5 2 2  reg[2] = reg[5] + reg[2]
addi 2 1 2  reg[2] = reg[2] + 1
addr 1 0 0  reg[0] = reg[1] + reg[0]
addi 3 1 3  reg[3] = reg[3] + 1
gtrr 3 4 5  reg[5] = reg[3] > reg[4] ? 1 :0
addr 2 5 2  reg[2] = reg[2] + reg[5]
seti 2 4 2  reg[2] = 2
addi 1 1 1  reg[1] = reg[1] + 1
gtrr 1 4 5  reg[5] = reg[1] > reg[4] ? 1 : 0
addr 5 2 2  reg[2] = reg[5] + reg[2]
seti 1 0 2  reg[2] = 1
mulr 2 2 2  reg[2] = reg[2] * reg[2]
addi 4 2 4  reg[4] = reg[4] * 2
mulr 4 4 4  reg[4] = reg[4] * reg[4]
mulr 2 4 4  reg[4] = reg[4] * reg[2]
muli 4 11 4 reg[4] = reg[4] * 11
addi 5 1 5  reg[5] = reg[5] + 1
mulr 5 2 5  reg[5] = reg[5] * reg[2]
addi 5 17 5 reg[5] = reg[5] + 17
addr 4 5 4  reg[4] = reg[4] + reg[5]
addr 2 0 2  reg[2] = reg[2] + reg[0]
seti 0 9 2  reg[2] = 0
setr 2 3 5  reg[5] = reg[2]
mulr 5 2 5  reg[5] = reg[5] * reg[2]
addr 2 5 5  reg[5] = reg[2] + reg[5]
mulr 2 5 5  reg[5] = reg[2] * reg[5]
muli 5 14 5 reg[5] = reg[5] * 14
mulr 5 2 5  reg[5] = reg[5] * reg[2]
addr 4 5 4  reg[4] = reg[4] + reg[5]
seti 0 9 0  reg[0] = 0
seti 0 6 2  reg[2] = 0
